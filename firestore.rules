rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reading statistics collection
    match /reading_progress/{document} {
      allow read: if true; // Public read access for analytics
      allow write: if request.auth == null && validateReadingProgress(request.resource.data);
    }
    
    // User feedback collection
    match /user_feedback/{document} {
      allow read: if true; // Public read access for displaying feedback
      allow write: if request.auth == null && validateFeedback(request.resource.data);
    }
    
    // Search queries collection
    match /search_queries/{document} {
      allow read: if false; // Private analytics data
      allow write: if request.auth == null && validateSearchQuery(request.resource.data);
    }
    
    // Page views collection
    match /page_views/{document} {
      allow read: if false; // Private analytics data
      allow write: if request.auth == null && validatePageView(request.resource.data);
    }
    
    // Content suggestions collection
    match /content_suggestions/{document} {
      allow read: if true; // Public read access
      allow write: if false; // Only admins can write (via admin SDK)
    }
    
    // Notifications collection
    match /notifications/{document} {
      allow read: if true; // Public read access
      allow write: if false; // Only admins can write
    }
    
    // Validation functions
    function validateReadingProgress(data) {
      return data.keys().hasAll(['section', 'progress', 'timestamp', 'sessionId']) &&
             data.section is string &&
             data.progress is number &&
             data.progress >= 0 &&
             data.progress <= 100 &&
             data.timestamp is timestamp &&
             data.sessionId is string;
    }
    
    function validateFeedback(data) {
      return data.keys().hasAll(['section', 'rating', 'timestamp', 'sessionId']) &&
             data.section is string &&
             data.rating is number &&
             data.rating >= 1 &&
             data.rating <= 5 &&
             data.timestamp is timestamp &&
             data.sessionId is string &&
             (!data.keys().hasAny(['comment']) || data.comment is string);
    }
    
    function validateSearchQuery(data) {
      return data.keys().hasAll(['query', 'resultsCount', 'timestamp', 'sessionId']) &&
             data.query is string &&
             data.query.size() > 0 &&
             data.query.size() < 100 &&
             data.resultsCount is number &&
             data.resultsCount >= 0 &&
             data.timestamp is timestamp &&
             data.sessionId is string;
    }
    
    function validatePageView(data) {
      return data.keys().hasAll(['page', 'title', 'timestamp']) &&
             data.page is string &&
             data.title is string &&
             data.timestamp is timestamp &&
             (!data.keys().hasAny(['userAgent']) || data.userAgent is string) &&
             (!data.keys().hasAny(['language']) || data.language is string) &&
             (!data.keys().hasAny(['referrer']) || data.referrer is string);
    }
  }
}
